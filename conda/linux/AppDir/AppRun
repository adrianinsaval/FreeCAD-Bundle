#!/bin/bash
HERE="$(dirname "$(readlink -f "${0}")")"
export PREFIX=${HERE}/usr
export LD_LIBRARY_PATH=${HERE}/usr/lib${LD_LIBRARY_PATH:+':'}$LD_LIBRARY_PATH
export PYTHONHOME=${HERE}/usr
export PATH_TO_FREECAD_LIBDIR=${HERE}/usr/lib
# export QT_QPA_PLATFORM_PLUGIN_PATH=${HERE}/usr/plugins
# export QT_XKB_CONFIG_ROOT=${HERE}/usr/lib
export FONTCONFIG_FILE=/etc/fonts/fonts.conf
export FONTCONFIG_PATH=/etc/fonts

# Show packages info if DEBUG env variable is set
if [ "$DEBUG" = 1 ]; then
    cat ${HERE}/packages.txt
fi

# Delete cached .qhc file if DOC env variable is set
# https://github.com/FreeCAD/FreeCAD-AppImage/issues/25
if [ "$DOC" = 1 ]; then
    if [ -e "$HOME/.local/share/freecad/freecad/freecad.qhc" ]; then
        rm $HOME/.local/share/freecad/freecad/freecad.qhc
        echo "AppImage: DOC environment variable was set."
        echo "AppImage: $HOME/.local/share/freecad/freecad/freecad.qhc was deleted."
    fi
fi

# SSL
# https://forum.freecad.org/viewtopic.php?f=4&t=34873&start=20#p327416
export SSL_CERT_FILE=$PREFIX/ssl/cacert.pem
# https://github.com/FreeCAD/FreeCAD-AppImage/pull/20
export GIT_SSL_CAINFO=$HERE/usr/ssl/cacert.pem

# Function to compare two version numbers
compare_versions() {
    local v1=$1
    local v2=$2
    local IFS=.
    local i
    local diff

    # Split version numbers into components
    local arr1=($v1)
    local arr2=($v2)

    # Compare each component
    for ((i=0; i<${#arr1[@]} || i<${#arr2[@]}; i++)); do
        # Set missing components to 0
        if [[ -z ${arr1[i]} ]]; then
            arr1[i]=0
        fi
        if [[ -z ${arr2[i]} ]]; then
            arr2[i]=0
        fi

        # Compare components numerically
        if (( ${arr1[i]} > ${arr2[i]} )); then
            echo "1"  # v1 is greater
            return
        elif (( ${arr1[i]} < ${arr2[i]} )); then
            echo "-1"  # v2 is greater
            return
        fi
    done

    echo "0"  # versions are equal
}

if [ "$FC_NO_GLIBCXX_CHECK" = "" ] && [ "$LD_PRELOAD" = ""]; then
    if [ -e $(which ldconfig)] && [ -e $(which readelf)] && [ -e $(which uname)]
        ARCH=$(uname -m)
        if [ "$ARCH" = "aarch64" ]; then
            ARCH=AArch64
        fi
        if [ "$ARCH" = "x86_64" ]; then
            ARCH=x86-64
        fi
        system_lib=$(ldconfig -p | grep stdc++ | grep "${ARCH}" | awk '{print $4}' | tail -1)
        appimage_lib="${HERE}/usr/lib/libstdc++.so"
        system_ver=$(readelf -sV "${system_lib}" | sed -n 's/.*@@GLIBCXX_//p' | sort -u -V | tail -1)
        appimage_ver=$(readelf -sV "${appimage_lib}" | sed -n 's/.*@@GLIBCXX_//p' | sort -u -V | tail -1)
        if [ $(compare_versions "${appimage_ver}" "${system_ver}") -eq -1 ]; then
            export LD_PRELOAD="${system_lib}"
            echo "LD_PRELOAD=$LD_PRELOAD"
        fi
    fi
fi

# Support for launching other applications (from /usr/bin)
# https://github.com/FreeCAD/FreeCAD-AppImage/issues/30
if [ ! -z "$1" ] && [ -e "$HERE/usr/bin/$1" ] ; then
    MAIN="$HERE/usr/bin/$1" ; shift
else
    MAIN="$HERE/usr/bin/freecad"
fi

"${MAIN}" "$@"
